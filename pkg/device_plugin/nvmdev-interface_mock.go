// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package device_plugin

import (
	"gitlab.com/nvidia/cloud-native/go-nvlib/pkg/nvmdev"
	"sync"
)

// Ensure, that nvmdevInterfaceMock does implement nvmdevInterface.
// If this is not the case, regenerate this file with moq.
var _ nvmdevInterface = &nvmdevInterfaceMock{}

// nvmdevInterfaceMock is a mock implementation of nvmdevInterface.
//
//	func TestSomethingThatUsesnvmdevInterface(t *testing.T) {
//
//		// make and configure a mocked nvmdevInterface
//		mockednvmdevInterface := &nvmdevInterfaceMock{
//			GetAllDevicesFunc: func() ([]*nvmdev.Device, error) {
//				panic("mock out the GetAllDevices method")
//			},
//			GetAllParentDevicesFunc: func() ([]*nvmdev.ParentDevice, error) {
//				panic("mock out the GetAllParentDevices method")
//			},
//		}
//
//		// use mockednvmdevInterface in code that requires nvmdevInterface
//		// and then make assertions.
//
//	}
type nvmdevInterfaceMock struct {
	// GetAllDevicesFunc mocks the GetAllDevices method.
	GetAllDevicesFunc func() ([]*nvmdev.Device, error)

	// GetAllParentDevicesFunc mocks the GetAllParentDevices method.
	GetAllParentDevicesFunc func() ([]*nvmdev.ParentDevice, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetAllDevices holds details about calls to the GetAllDevices method.
		GetAllDevices []struct {
		}
		// GetAllParentDevices holds details about calls to the GetAllParentDevices method.
		GetAllParentDevices []struct {
		}
	}
	lockGetAllDevices       sync.RWMutex
	lockGetAllParentDevices sync.RWMutex
}

// GetAllDevices calls GetAllDevicesFunc.
func (mock *nvmdevInterfaceMock) GetAllDevices() ([]*nvmdev.Device, error) {
	if mock.GetAllDevicesFunc == nil {
		panic("nvmdevInterfaceMock.GetAllDevicesFunc: method is nil but nvmdevInterface.GetAllDevices was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetAllDevices.Lock()
	mock.calls.GetAllDevices = append(mock.calls.GetAllDevices, callInfo)
	mock.lockGetAllDevices.Unlock()
	return mock.GetAllDevicesFunc()
}

// GetAllDevicesCalls gets all the calls that were made to GetAllDevices.
// Check the length with:
//
//	len(mockednvmdevInterface.GetAllDevicesCalls())
func (mock *nvmdevInterfaceMock) GetAllDevicesCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetAllDevices.RLock()
	calls = mock.calls.GetAllDevices
	mock.lockGetAllDevices.RUnlock()
	return calls
}

// GetAllParentDevices calls GetAllParentDevicesFunc.
func (mock *nvmdevInterfaceMock) GetAllParentDevices() ([]*nvmdev.ParentDevice, error) {
	if mock.GetAllParentDevicesFunc == nil {
		panic("nvmdevInterfaceMock.GetAllParentDevicesFunc: method is nil but nvmdevInterface.GetAllParentDevices was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetAllParentDevices.Lock()
	mock.calls.GetAllParentDevices = append(mock.calls.GetAllParentDevices, callInfo)
	mock.lockGetAllParentDevices.Unlock()
	return mock.GetAllParentDevicesFunc()
}

// GetAllParentDevicesCalls gets all the calls that were made to GetAllParentDevices.
// Check the length with:
//
//	len(mockednvmdevInterface.GetAllParentDevicesCalls())
func (mock *nvmdevInterfaceMock) GetAllParentDevicesCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetAllParentDevices.RLock()
	calls = mock.calls.GetAllParentDevices
	mock.lockGetAllParentDevices.RUnlock()
	return calls
}
